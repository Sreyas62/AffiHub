# Generated by Django 5.2.3 on 2025-06-28 05:30

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Category name', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text='Category description')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this category is active')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'db_table': 'products_category',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Product name', max_length=200)),
                ('description', models.TextField(help_text='Product description')),
                ('price', models.DecimalField(decimal_places=2, help_text='Product price', max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('commission_rate', models.DecimalField(decimal_places=2, default=10.0, help_text='Commission rate percentage for affiliates', max_digits=5, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('image_url', models.URLField(blank=True, help_text='Product image URL', null=True)),
                ('external_url', models.URLField(blank=True, help_text="External product URL (e.g., merchant's website)", null=True)),
                ('sku', models.CharField(blank=True, help_text='Stock Keeping Unit', max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this product is active for promotion')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, help_text='Product category', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='products.category')),
                ('merchant', models.ForeignKey(help_text='Merchant who owns this product', limit_choices_to={'role': 'merchant'}, on_delete=django.db.models.deletion.CASCADE, related_name='products', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'db_table': 'products_product',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['merchant'], name='products_pr_merchan_461e63_idx'), models.Index(fields=['category'], name='products_pr_categor_9edb3d_idx'), models.Index(fields=['is_active'], name='products_pr_is_acti_ca4d9a_idx')],
            },
        ),
    ]
